(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{Jz1P:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return o})),a.d(t,"default",(function(){return m}));a("1c7q"),a("abGl"),a("gZHo"),a("Fdmb"),a("Ir+3"),a("2mQt");var n=a("/FXl"),r=a("TjRS"),l=a("ZFoC"),i=a("/mkI");a("aD51");function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/TimedImage.mdx"}});var c={_frontmatter:o},d=r.a;function m(e){var t,a,m=e.components,p=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(d,b({},c,p,{components:m,mdxType:"MDXLayout"}),Object(n.b)("h1",null,"TimedImage"),Object(n.b)("h2",{id:"description"},"Description"),Object(n.b)("p",null,"A TimedImage repeatedly renders an image at a timed interval. "),Object(n.b)("p",null,"Features optional client-side cache busting so the image reloads on every render."),Object(n.b)("h2",{id:"usage"},"Usage"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-jsx"}),"import { TimedImage } from 'react-timed-image';\n")),Object(n.b)(l.c,{__position:1,__code:'<TimedImage src="https://loremflickr.com/220/140" interval={3000} />',__scope:(t={props:p,DefaultLayout:r.a,Playground:l.c,Props:l.d,TimedImage:i.a},t.DefaultLayout=r.a,t._frontmatter=o,t),mdxType:"Playground"},Object(n.b)(i.a,{src:"https://loremflickr.com/220/140",interval:3e3,mdxType:"TimedImage"})),Object(n.b)("small",null,"Note: You can edit the source above. Your changes will be rendered immediately."),Object(n.b)("br",null),Object(n.b)("br",null),Object(n.b)("p",null,"The TimedImage above uses ",Object(n.b)("a",b({parentName:"p"},{href:"https://loremflickr.com/"}),"loremflickr.com"),", which returns a different image on every request."),Object(n.b)("p",null,"By default, client-side cache-busting is enabled via ",Object(n.b)("a",b({parentName:"p"},{href:"https://devboldly.github.io/react-uncached-image/"}),"react-uncached-image"),",\nso the image will be downloaded from the server on every render. You can disable this functionality with the prop ",Object(n.b)("inlineCode",{parentName:"p"},"uncached={false}"),"."),Object(n.b)("h2",{id:"props"},"Props"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",b({parentName:"tr"},{align:null}),"Prop"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),"interval"),Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"number")," ","|"," ",Object(n.b)("inlineCode",{parentName:"td"},"undefined")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Optional. The re-render interval in milliseconds. Defaults to ",Object(n.b)("inlineCode",{parentName:"td"},"5000"),".")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",b({parentName:"tr"},{align:null}),"uncached"),Object(n.b)("td",b({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"boolean")," ","|"," ",Object(n.b)("inlineCode",{parentName:"td"},"undefined")),Object(n.b)("td",b({parentName:"tr"},{align:null}),"Optional. When ",Object(n.b)("inlineCode",{parentName:"td"},"true"),", the ",Object(n.b)("inlineCode",{parentName:"td"},"src")," attribute will have a cache-busting query param attached, causing the browser to download the image on every render. When ",Object(n.b)("inlineCode",{parentName:"td"},"false"),", the ",Object(n.b)("inlineCode",{parentName:"td"},"src")," will not have a cache-busting query param attached and the browser cache may be used for the image. Default ",Object(n.b)("inlineCode",{parentName:"td"},"true"),".")))),Object(n.b)("p",null,"This component supports ",Object(n.b)("strong",{parentName:"p"},"all ",Object(n.b)("inlineCode",{parentName:"strong"},"img")," props"),", such as ",Object(n.b)("inlineCode",{parentName:"p"},"alt"),", ",Object(n.b)("inlineCode",{parentName:"p"},"className"),", ",Object(n.b)("inlineCode",{parentName:"p"},"style"),", and ",Object(n.b)("inlineCode",{parentName:"p"},"onClick"),". It renders as an ",Object(n.b)("inlineCode",{parentName:"p"},"img")," element."),Object(n.b)("h2",{id:"example"},"Example"),Object(n.b)("p",null,"The following renders a build status badge every 3 seconds, showing the build status in real-time:"),Object(n.b)(l.c,{__position:4,__code:'<TimedImage\n  src="https://github.com/devboldly/react-timed-image/workflows/Deploy/badge.svg"\n  interval={3000}\n/>',__scope:(a={props:p,DefaultLayout:r.a,Playground:l.c,Props:l.d,TimedImage:i.a},a.DefaultLayout=r.a,a._frontmatter=o,a),mdxType:"Playground"},Object(n.b)(i.a,{src:"https://github.com/devboldly/react-timed-image/workflows/Deploy/badge.svg",interval:3e3,mdxType:"TimedImage"})),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Note: This example has since been turned into a Markdown enabled component, ",Object(n.b)("a",b({parentName:"p"},{href:"https://devboldly.github.io/react-build-status-badge/"}),"BuildStatusBadge"),".")))}m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/TimedImage.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-timed-image-mdx-c8f276486dc071d9f647.js.map