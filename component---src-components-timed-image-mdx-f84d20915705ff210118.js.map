{"version":3,"sources":["webpack:///../src/components/TimedImage.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","TimedImage","src","interval","isMDXComponent"],"mappings":"+QAUaA,G,UAAe,S,+MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,oCACA,kBACE,GAAM,eADR,eAGA,sFACA,0GACA,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,gBADZ,sDAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uEAA0EC,SAAO,GAClHL,QACAH,kBACAS,eACAC,UACAC,gBALkH,gBAMlHX,IANkH,EAOlHH,eAPkH,GAQjHO,QAAQ,cACb,YAAC,IAAD,CAAYQ,IAAI,kCAAkCC,SAAU,IAAMT,QAAQ,gBAExE,4GAIA,uBACA,uBACA,kDAAiC,iBAAGC,WAAW,IAC3C,KAAQ,4BADqB,mBAAjC,uDAGA,6EAA4D,iBAAGA,WAAW,IACtE,KAAQ,uDADgD,wBAA5D,wHAGgH,0BAAYA,WAAW,KAAvB,oBAHhH,KAIA,kBACE,GAAM,SADR,SAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UAFH,YAEqE,0BAAYA,WAAW,MAAvB,cACrE,kBAAIA,WAAW,KACb,MAAS,MADX,iEAEqE,0BAAYA,WAAW,MAAvB,QAFrE,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WAFH,YAEsE,0BAAYA,WAAW,MAAvB,cACtE,kBAAIA,WAAW,KACb,MAAS,MADX,kBAEsB,0BAAYA,WAAW,MAAvB,QAFtB,SAEiF,0BAAYA,WAAW,MAAvB,OAFjF,8HAEgQ,0BAAYA,WAAW,MAAvB,SAFhQ,SAE4T,0BAAYA,WAAW,MAAvB,OAF5T,gHAE6d,0BAAYA,WAAW,MAAvB,QAF7d,QAMN,gDAA+B,sBAAQA,WAAW,KAAnB,OAA+B,0BAAYA,WAAW,UAAvB,OAA/B,UAA/B,aAAmJ,0BAAYA,WAAW,KAAvB,OAAnJ,KAAwM,0BAAYA,WAAW,KAAvB,aAAxM,KAAmQ,0BAAYA,WAAW,KAAvB,SAAnQ,SAA8T,0BAAYA,WAAW,KAAvB,WAA9T,sBAAwY,0BAAYA,WAAW,KAAvB,OAAxY,aACA,kBACE,GAAM,WADR,WAGA,2HACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0HAA6HC,SAAO,GACrKL,QACAH,kBACAS,eACAC,UACAC,gBALqK,gBAMrKX,IANqK,EAOrKH,eAPqK,GAQpKO,QAAQ,cACb,YAAC,IAAD,CAAYQ,IAAI,8EAA8EC,SAAU,IAAMT,QAAQ,gBAEpH,8BACE,iBAAGC,WAAW,cAAd,+EAA2G,iBAAGA,WAAW,IACrH,KAAQ,2DAD+F,oBAA3G,Y,6MAQNJ,EAAWa,gBAAiB","file":"component---src-components-timed-image-mdx-f84d20915705ff210118.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-timed-image/react-timed-image/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport { TimedImage } from \"./TimedImage\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>TimedImage</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`A TimedImage repeatedly renders an image at a timed interval.`}</p>\n    <p>{`Features optional client-side cache busting so the image reloads on every render.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { TimedImage } from \"react-timed-image\";\n`}</code></pre>\n    <Playground __position={1} __code={'<TimedImage src=\\\"https://loremflickr.com/220/140\\\" interval={3000} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TimedImage,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TimedImage src=\"https://loremflickr.com/220/140\" interval={3000} mdxType=\"TimedImage\" />\n    </Playground>\n    <small>\n  Note: You can edit the source above. Your changes will be rendered\n  immediately.\n    </small>\n    <br />\n    <br />\n    <p>{`The TimedImage above uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://loremflickr.com/\"\n      }}>{`loremflickr.com`}</a>{`, which returns a different image on every request.`}</p>\n    <p>{`By default, client-side cache-busting is enabled via `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-uncached-image/\"\n      }}>{`react-uncached-image`}</a>{`,\nso the image will be downloaded from the server on every render. You can disable this functionality with the prop `}<inlineCode parentName=\"p\">{`uncached={false}`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`interval`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional. The re-render interval in milliseconds. Defaults to `}<inlineCode parentName=\"td\">{`5000`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`uncached`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional. When `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, the `}<inlineCode parentName=\"td\">{`src`}</inlineCode>{` attribute will have a cache-busting query param attached, causing the browser to download the image on every render. When `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`, the `}<inlineCode parentName=\"td\">{`src`}</inlineCode>{` will not have a cache-busting query param attached and the browser cache may be used for the image. Default `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`This component supports `}<strong parentName=\"p\">{`all `}<inlineCode parentName=\"strong\">{`img`}</inlineCode>{` props`}</strong>{`, such as `}<inlineCode parentName=\"p\">{`alt`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{`. It renders as an `}<inlineCode parentName=\"p\">{`img`}</inlineCode>{` element.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following renders a build status badge every 3 seconds, showing the build status in real-time:`}</p>\n    <Playground __position={4} __code={'<TimedImage\\n  src=\\\"https://github.com/justinmahar/react-timed-image/workflows/Deploy/badge.svg\\\"\\n  interval={3000}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TimedImage,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TimedImage src=\"https://github.com/justinmahar/react-timed-image/workflows/Deploy/badge.svg\" interval={3000} mdxType=\"TimedImage\" />\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: This example has since been turned into a Markdown enabled component, `}<a parentName=\"p\" {...{\n          \"href\": \"https://justinmahar.github.io/react-build-status-badge/\"\n        }}>{`BuildStatusBadge`}</a>{`.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}